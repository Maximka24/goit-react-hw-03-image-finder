{"version":3,"sources":["Components/GetImg/GetImg.module.css","Components/DownloadImg/DownloadImg.module.css","Components/ModalImg/ModalImg.module.css","Components/GetImg/GetImg.jsx","Components/DownloadImg/DownloadImg.jsx","Components/ModalImg/ModalImg.jsx","Components/ImgContainer/ImgContainer.jsx","Components/App.js","index.js","Components/ImgContainer/ImgContainer.module.css"],"names":["module","exports","GetImg","state","nameImg","handleNameChangeInput","event","setState","currentTarget","value","toLowerCase","handelSubmitForm","preventDefault","trim","alert","props","onSubmit","className","s","GetContainer","this","BtnForm","type","style","width","height","placeholder","name","onChange","pattern","title","Component","DownloadImg","DownloadContainer","nameImgState","DownloadBtnImg","onClick","onClickPageState","modalRoot","document","querySelector","ModalImg","handleClickKeyDown","e","code","onClose","handleClickBackDrop","target","window","addEventListener","removeEventListener","createPortal","id","Overlay","Modal","children","IMG_Get_API","KEY_API","ImgContainer","imgList","error","showModal","targetImg","status","statusLoad","modalRendImg","currentSrc","toggleModal","prevProps","prevState","imgName","fetch","imgPage","then","res","ok","json","Promise","reject","Error","img","hits","catch","scrollToTarget","scrollTo","top","documentElement","scrollHeight","behavior","message","color","ImageGallery","map","webformatURL","ImageGalleryItem","ImageGalleryItemImage","src","alt","App","pageImg","onSubmitNameState","getNameImg","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.17bb1249.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"GetContainer\":\"GetImg_GetContainer__1ISzo\",\"BtnForm\":\"GetImg_BtnForm__smFNy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DownloadContainer\":\"DownloadImg_DownloadContainer__3nJnX\",\"DownloadBtnImg\":\"DownloadImg_DownloadBtnImg__1ZLqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"ModalImg_Overlay__4KLEc\",\"Modal\":\"ModalImg_Modal__XNbHo\"};","import React, { Component } from \"react\";\nimport { BiSearch } from \"react-icons/bi\";\n\nimport PropTypes from \"prop-types\";\n\nimport s from \"./GetImg.module.css\";\n\nexport default class GetImg extends Component {\n  state = {\n    nameImg: \"\",\n  };\n\n  \n  handleNameChangeInput = (event) => {\n    this.setState({ nameImg: event.currentTarget.value.toLowerCase() });\n  };\n\n  handelSubmitForm = (event) => {\n    event.preventDefault();\n\n    if (this.state.nameImg.trim() === \"\") {\n      return alert(\"Введите название картинки!\");\n    }\n\n    this.props.onSubmit(this.state.nameImg);\n    this.setState({ nameImg: \"\" });\n  };\n\n  render() {\n    return (\n      <div className={s.GetContainer}>\n        <form onSubmit={this.handelSubmitForm}>\n          <button className={s.BtnForm} type=\"submit\">\n            <BiSearch style={{ width: 24, height: 24 }} />\n          </button>\n          <input\n            type=\"tel\"\n            placeholder=\"Search images...\"\n            name=\"number\"\n            value={this.state.nameImg}\n            onChange={this.handleNameChangeInput}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Наименование изображения может состоять только из букв!!!\"\n            // required\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nGetImg.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport s from \"./DownloadImg.module.css\";\n\nexport default class DownloadImg extends Component {\n  render() {\n\n    return (\n      <div className={s.DownloadContainer}>\n        {this.props.nameImgState !== \"\" && (\n          <button\n            className={s.DownloadBtnImg}\n            onClick={this.props.onClickPageState}\n          >\n            Add image\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nDownloadImg.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport s from \"./ModalImg.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n// const backDrop = document.querySelector('#Overlay')\n\nexport default class ModalImg extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleClickKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleClickKeyDown);\n  }\n\n  handleClickKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  handleClickBackDrop = (e) => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div\n        id=\"Overlay\"\n        className={s.Overlay}\n        onClick={this.handleClickBackDrop}\n      >\n        <div className={s.Modal}>{this.props.children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport DownloadImg from \"../DownloadImg/DownloadImg\";\nimport ModalImg from \"../ModalImg/ModalImg\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nimport s from \"./ImgContainer.module.css\";\n\nconst IMG_Get_API = \"https://pixabay.com/api/\";\nconst KEY_API = \"22248336-3f9f08778186b55c7ac32d168\";\n\nexport default class ImgContainer extends Component {\n  state = {\n    imgList: '',\n    error: null,\n    showModal: false,\n    targetImg: \"\",\n    status: \"idle\",\n    statusLoad: false,\n  };\n\n  \n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.imgName !== this.props.imgName) {\n\n      this.setState({ imgList: '', status: \"load\" });\n\n      fetch(\n        `${IMG_Get_API}?q=${this.props.imgName}&page=${this.props.imgPage}&key=${KEY_API}&image_type=photo&orientation=horizontal&per_page=12`\n      )\n        .then((res) => {\n          if (res.ok) {\n            return res.json();\n          }\n\n          return Promise.reject(\n            new Error(`Нет изображения с названием ${this.props.imgName}`)\n          );\n        })\n        .then((img) =>\n          this.setState((prevState) => ({\n            imgList: [...prevState.imgList, ...img.hits],\n            status: \"resolved\",\n            // statusLoad: false,\n          })))\n        .catch((error) => this.setState({ error, status: \"error\" }));\n    }\n\n     if ( prevProps.imgPage < this.props.imgPage) {\n      this.setState({ statusLoad: true});\n\n      fetch(\n        `${IMG_Get_API}?q=${this.props.imgName}&page=${this.props.imgPage}&key=${KEY_API}&image_type=photo&orientation=horizontal&per_page=12`\n      )\n        .then((res) => {\n          if (res.ok) {\n            return res.json();\n          }\n\n          return Promise.reject(\n            new Error(`Нет изображения с названием ${this.props.imgName}`)\n          );\n        })\n        .then((img) =>\n          this.setState((prevState) => ({\n            imgList: [...prevState.imgList, ...img.hits],          \n            statusLoad: false,\n          })))\n        .then(this.scrollToTarget)\n        .catch((error) => this.setState({ error, status: \"error\" }));\n    }\n  }\n\n  scrollToTarget () {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n  \n  modalRendImg = (e) => {\n    if (e.target !== e.currentTarget) {\n      this.setState(() => ({\n        targetImg: e.target.currentSrc,\n      }));\n    }\n  };\n\n  toggleModal = (e) => {\n    this.setState((state) => ({\n      showModal: !state.showModal,\n    }));\n  };\n\n\n  render() {\n    const { imgList, error, status, showModal, statusLoad } = this.state;\n\n    if (status === \"idle\") {\n      return (\n        <div className={s.ImgContainer}>Введите запросы в поле выше!! </div>\n      );\n    }\n\n    if (status === \"error\") {\n      return <h1 className={s.ImgContainer}> {error.message} </h1>;\n    }\n\n    if (status === \"load\") {\n      return <div className={ s.ImgContainer }>\n        <Loader type=\"Oval\" color=\"#00BFFF\" height={ 50 } width={ 50 } />\n      </div>\n    }\n    \n\n    if (status === \"resolved\") {\n      return (\n        <>    \n          {imgList && (\n            <ul className={s.ImageGallery} onClick={this.modalRendImg}>\n              {imgList.map(({ id, webformatURL }) => (\n                <li\n                  key={id}\n                  className={s.ImageGalleryItem}\n                  onClick={this.toggleModal}\n                >\n                  <img\n                    className={s.ImageGalleryItemImage}\n                    src={webformatURL}\n                    alt={`Картинка по запросу ${this.props.imgName}`}\n                  />\n                </li>\n              ))}\n            </ul>\n          ) }\n          { statusLoad &&\n            <div className={ s.ImgContainer }>\n              <Loader type=\"Oval\" color=\"#00BFFF\" height={50} width={50} />\n            </div>}\n          \n          <DownloadImg\n            nameImgState={ this.state.imgList }\n            onClickPageState={ () => { this.props.onClickPageState() } }\n          />\n\n          {showModal && (\n            <ModalImg onClose={this.toggleModal}>\n              <img\n                src={this.state.targetImg}\n                alt={`Картинка по запросу ${this.props.imgName}`}\n              />\n            </ModalImg>\n          )}\n        </>\n      );\n    }\n  }\n}\n\nImgContainer.propTypes = {\n    onClickPageState: PropTypes.func.isRequired,\n    imgName: PropTypes.string.isRequired,\n    imgPage: PropTypes.number.isRequired,\n  };\n ","import React, { Component } from \"react\";\n\nimport GetImg from \"./GetImg/GetImg.jsx\";\nimport ImgContainer from \"./ImgContainer/ImgContainer.jsx\";\n\nclass App extends Component {\n  state = {\n    nameImg: \"\",\n    pageImg: 1,\n  };\n\n  onSubmitNameState = (getNameImg) => {\n    this.setState({\n      nameImg: getNameImg,\n      pageImg: 1,\n    });\n  };\n\n  onClickPageState = () => {\n    this.setState((prevPage) => ({ pageImg: prevPage.pageImg + 1 }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <GetImg onSubmit={this.onSubmitNameState} />\n\n        <ImgContainer onClickPageState={this.onClickPageState} imgName={this.state.nameImg} imgPage={this.state.pageImg}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.module.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImgContainer\":\"ImgContainer_ImgContainer__3NYoz\",\"ImageGallery\":\"ImgContainer_ImageGallery__mL4Zb\",\"ImageGalleryItem\":\"ImgContainer_ImageGalleryItem__mdEdH\",\"ImageGalleryItemImage\":\"ImgContainer_ImageGalleryItemImage__3VVAd\"};"],"sourceRoot":""}