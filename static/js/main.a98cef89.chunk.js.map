{"version":3,"sources":["Components/ImgItem/ImgItem.module.css","Components/GetImg/GetImg.module.css","Components/DownloadImg/DownloadImg.module.css","Components/ModalImg/ModalImg.module.css","Components/GetImg/GetImg.jsx","Components/DownloadImg/DownloadImg.jsx","Components/ModalImg/ModalImg.jsx","Components/ImgItem/ImgItem.jsx","Components/ImgContainer/ImgContainer.jsx","Components/App.js","index.js","Components/ImgContainer/ImgContainer.module.css"],"names":["module","exports","GetImg","state","nameImg","handleNameChangeInput","event","setState","currentTarget","value","toLowerCase","handelSubmitForm","preventDefault","trim","alert","props","onSubmit","className","s","GetContainer","this","BtnForm","type","style","width","height","placeholder","name","onChange","pattern","title","Component","DownloadImg","DownloadContainer","nameImgState","DownloadBtnImg","onClick","onClickPageState","modalRoot","document","querySelector","ModalImg","handleClickKeyDown","e","code","onClose","handleClickBackDrop","target","window","addEventListener","removeEventListener","createPortal","id","Overlay","Modal","children","ImageItem","ImageGallery","onClickOpenModal","imgList","map","webformatURL","ImageGalleryItem","onClickToggleModal","ImageGalleryItemImage","src","alt","imgName","ImgContainer","imgStatus","errorApi","message","color","modalRendImg","toggleModal","statusLoad","showModal","targetImg","IMG_Get_API","KEY_API","App","pageImg","status","error","onSubmitNameState","getNameImg","prevPage","currentSrc","prevProps","prevState","fetch","then","res","ok","json","Promise","reject","Error","img","hits","catch","scrollToTarget","scrollTo","top","documentElement","scrollHeight","behavior","imgPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a98cef89.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImgContainer\":\"ImgItem_ImgContainer__D3Eof\",\"ImageGallery\":\"ImgItem_ImageGallery__2Z2PR\",\"ImageGalleryItem\":\"ImgItem_ImageGalleryItem__dYlsS\",\"ImageGalleryItemImage\":\"ImgItem_ImageGalleryItemImage__1yXME\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GetContainer\":\"GetImg_GetContainer__1ISzo\",\"BtnForm\":\"GetImg_BtnForm__smFNy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DownloadContainer\":\"DownloadImg_DownloadContainer__3nJnX\",\"DownloadBtnImg\":\"DownloadImg_DownloadBtnImg__1ZLqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"ModalImg_Overlay__4KLEc\",\"Modal\":\"ModalImg_Modal__XNbHo\"};","import React, { Component } from \"react\";\nimport { BiSearch } from \"react-icons/bi\";\n\nimport PropTypes from \"prop-types\";\n\nimport s from \"./GetImg.module.css\";\n\nexport default class GetImg extends Component {\n  state = {\n    nameImg: \"\",\n  };\n\n  handleNameChangeInput = (event) => {\n    this.setState({ nameImg: event.currentTarget.value.toLowerCase() });\n  };\n\n  handelSubmitForm = (event) => {\n    event.preventDefault();\n\n    if (this.state.nameImg.trim() === \"\") {\n      return alert(\"Введите название картинки!\");\n    }\n\n    this.props.onSubmit(this.state.nameImg);\n    this.setState({ nameImg: \"\" });\n  };\n\n  render() {\n    return (\n      <div className={s.GetContainer}>\n        <form onSubmit={this.handelSubmitForm}>\n          <button className={s.BtnForm} type=\"submit\">\n            <BiSearch style={{ width: 24, height: 24 }} />\n          </button>\n          <input\n            type=\"tel\"\n            placeholder=\"Search images...\"\n            name=\"number\"\n            value={this.state.nameImg}\n            onChange={this.handleNameChangeInput}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Наименование изображения может состоять только из букв!!!\"\n            // required\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nGetImg.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport s from \"./DownloadImg.module.css\";\n\nexport default class DownloadImg extends Component {\n  render() {\n    return (\n      <div className={s.DownloadContainer}>\n        {this.props.nameImgState !== \"\" && (\n          <button\n            className={s.DownloadBtnImg}\n            onClick={this.props.onClickPageState}\n          >\n            Add image\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nDownloadImg.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport s from \"./ModalImg.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n// const backDrop = document.querySelector('#Overlay')\n\nexport default class ModalImg extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleClickKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleClickKeyDown);\n  }\n\n  handleClickKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  handleClickBackDrop = (e) => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div\n        id=\"Overlay\"\n        className={s.Overlay}\n        onClick={this.handleClickBackDrop}\n      >\n        <div className={s.Modal}>{this.props.children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./ImgItem.module.css\";\n\nexport default class ImageItem extends Component {\n  render() {\n    return (\n      <ul className={s.ImageGallery} onClick={this.props.onClickOpenModal}>\n        {this.props.imgList.map(({ id, webformatURL }) => (\n          <li\n            key={id}\n            className={s.ImageGalleryItem}\n            onClick={this.props.onClickToggleModal}\n          >\n            <img\n              className={s.ImageGalleryItemImage}\n              src={webformatURL}\n              alt={`Картинка по запросу ${this.props.imgName}`}\n            />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nImageItem.propTypes = {\n  onClickOpenModal: PropTypes.func,\n  onClickToggleModal: PropTypes.func,\n  imgName: PropTypes.string.isRequired,\n  imgList: PropTypes.array,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport DownloadImg from \"../DownloadImg/DownloadImg\";\nimport ModalImg from \"../ModalImg/ModalImg\";\nimport ImageItem from \"../ImgItem/ImgItem\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nimport s from \"./ImgContainer.module.css\";\n\n\n\nexport default class ImgContainer extends Component {\n \n  render() {\n    \n    if (this.props.imgStatus === \"idle\") {\n      return (\n        <div className={s.ImgContainer}>Введите запросы в поле выше!! </div>\n      );\n    }\n\n    if (this.props.imgStatus === \"error\") {\n      return <h1 className={s.ImgContainer}> {this.props.errorApi.message} </h1>;\n    }\n\n    if (this.props.imgStatus === \"load\") {\n      return (\n        <div className={s.ImgContainer}>\n          <Loader type=\"Oval\" color=\"#00BFFF\" height={50} width={50} />\n        </div>\n      );\n    }\n\n    if (this.props.imgStatus === \"resolved\") {\n      return (\n        <>\n          {this.props.imgList && (\n            <ImageItem\n              imgName={this.props.imgName}\n              imgList={this.props.imgList}\n              onClickOpenModal={this.props.modalRendImg}\n              onClickToggleModal={this.props.toggleModal}\n            />\n          )}\n          {this.props.statusLoad && (\n            <div className={s.ImgContainer}>\n              <Loader type=\"Oval\" color=\"#00BFFF\" height={50} width={50} />\n            </div>\n          )}\n\n          <DownloadImg\n            nameImgState={this.props.imgName}\n            onClickPageState={() => {\n              this.props.onClickPageState();\n            }}\n          />\n\n          {this.props.showModal && (\n            <ModalImg onClose={this.props.toggleModal}>\n              <img\n                src={this.props.targetImg}\n                alt={`Картинка по запросу ${this.props.imgName}`}\n              />\n            </ModalImg>\n          )}\n        </>\n      );\n    }\n  }\n}\n\nImgContainer.propTypes = {\n  onClickPageState: PropTypes.func.isRequired,\n  modalRendImg: PropTypes.func.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  imgName: PropTypes.string.isRequired,\n  imgPage: PropTypes.number.isRequired,\n  imgList: PropTypes.array.isRequired,\n  imgStatus: PropTypes.string.isRequired,\n  statusLoad: PropTypes.bool.isRequired,\n  showModal: PropTypes.bool.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport GetImg from \"./GetImg/GetImg.jsx\";\nimport ImgContainer from \"./ImgContainer/ImgContainer.jsx\";\n\nconst IMG_Get_API = \"https://pixabay.com/api/\";\nconst KEY_API = \"22248336-3f9f08778186b55c7ac32d168\";\n\nclass App extends Component {\n  state = {\n    imgList: [],\n    nameImg: \"\",\n    pageImg: 1,\n    status: \"idle\",\n    targetImg: \"\",\n    error: null,\n    statusLoad: false,\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { nameImg, pageImg } = this.state;\n\n    if (prevState.nameImg !== nameImg) {\n      this.setState({ imgList: [], status: \"load\" });\n\n      fetch(\n        `${IMG_Get_API}?q=${nameImg}&page=${pageImg}&key=${KEY_API}&image_type=photo&orientation=horizontal&per_page=12`\n      )\n        .then((res) => {\n          if (res.ok) {\n            return res.json();\n          }\n\n          return Promise.reject(\n            new Error(`Нет изображения с названием ${nameImg}`)\n          );\n        })\n        .then((img) =>\n          this.setState((prevState) => ({\n            imgList: [...prevState.imgList, ...img.hits],\n            status: \"resolved\",          \n          }))\n        )\n        .catch((error) => this.setState({ error, status: \"error\" }));\n    }\n\n    if (prevState.pageImg < pageImg) {\n      this.setState({ statusLoad: true });\n\n      fetch(\n        `${IMG_Get_API}?q=${nameImg}&page=${pageImg}&key=${KEY_API}&image_type=photo&orientation=horizontal&per_page=12`\n      )\n        .then((res) => {\n          if (res.ok) {\n            return res.json();\n          }\n\n          return Promise.reject(\n            new Error(`Нет изображения с названием ${nameImg}`)\n          );\n        })\n        .then((img) =>\n          this.setState((prevState) => ({\n            imgList: [...prevState.imgList, ...img.hits],\n            statusLoad: false,\n          }))\n        )\n        .then(this.scrollToTarget)\n        .catch((error) => this.setState({ error, status: \"error\" }));\n    }\n  }\n\n  onSubmitNameState = (getNameImg) => {\n    this.setState({\n      nameImg: getNameImg,\n      pageImg: 1,\n    });\n  };\n\n  onClickPageState = () => {\n    this.setState((prevPage) => ({ pageImg: prevPage.pageImg + 1 }));\n  };\n\n  scrollToTarget() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n   modalRendImg = (e) => {\n    if (e.target !== e.currentTarget) {\n      this.setState(() => ({\n        targetImg: e.target.currentSrc,\n      }));\n    }\n   };\n  \n  toggleModal = () => {\n    this.setState((state) => ({\n      showModal: !state.showModal,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <GetImg onSubmit={this.onSubmitNameState} />\n\n        <ImgContainer\n          imgList={this.state.imgList}\n          imgName={this.state.nameImg}\n          imgPage={this.state.pageImg}\n          imgStatus={ this.state.status }\n          errorApi={this.state.error}\n          statusLoad={this.state.statusLoad}\n          showModal={this.state.showModal}\n          targetImg={this.state.targetImg}\n          onClickPageState={this.onClickPageState}\n          modalRendImg={this.modalRendImg}\n          toggleModal={this.toggleModal}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.module.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImgContainer\":\"ImgContainer_ImgContainer__3NYoz\"};"],"sourceRoot":""}